{"version":3,"sources":["store/actions/actionTypes.js","store/actions/myactions.js","config/history.js","Components/List/index.jsx","Components/Home/index.jsx","Service/service.js","Components/Comman/Card/index.jsx","Components/MovieDetails/index.jsx","Layout/Header.jsx","App.js","reportWebVitals.js","store/reducers/index.js","store/store.js","index.js"],"names":["GET_MOVIE_LIST","SELECTED_MOVIE","OPEN","openToast","payload","dispatch","type","history","createBrowserHistory","List","movies","useDispatch","handleClick","movie","push","className","Container","ListGroup","map","index","original_title","onClick","Item","variant","Home","moviesArray","useSelector","state","movieList","useEffect","getMovieList","a","axios","post","res","data","results","useStyles","makeStyles","theme","createStyles","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","MovieDetailsCard","classes","title","backdrop_path","release_date","overview","vote_average","vote_count","Card","CardHeader","subheader","CardMedia","image","CardContent","Typography","color","component","CardActions","disableSpacing","IconButton","CustomizedSnackbars","Alert","props","elevation","open","handleClose","event","reason","Snackbar","autoHideDuration","onClose","severity","MovieDetails","selectedMovie","Button","Header","Navbar","bg","Brand","App","exact","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","movieReducer","action","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b425e49.chunk.js","sourcesContent":["export const GET_MOVIE_LIST = 'GET_MOVIE_LIST'\r\nexport const SELECTED_MOVIE = 'SELECTED_MOVIE'\r\nexport const OPEN  = 'OPEN'","import { GET_MOVIE_LIST, OPEN, SELECTED_MOVIE } from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../Service/service\";\r\n\r\n//Async call for fetching Movies\r\nexport const getMovies = () => async (dispatch) => {\r\n  const res = await axios.post(`${baseUrl}`);\r\n  dispatch({ type: GET_MOVIE_LIST, payload: res.data.results });\r\n};\r\n// Storing single movie details in Redux state\r\nexport const selectedMovie = (payload) => (dispatch) => {\r\n  dispatch({ type: SELECTED_MOVIE, payload });\r\n};\r\n// For opening Toast message on Favorite add\r\nexport const openToast = (payload) => (dispatch) => {\r\n  dispatch({ type: OPEN, payload });\r\n};\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();\r\n","import { ListGroup, Container } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { selectedMovie } from \"../../store/actions/myactions\";\r\nimport { history } from \"../../config/history\";\r\nconst List = ({ movies }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Passing single movie detail to \"/movie-details\"\r\n  const handleClick = (movie) => {\r\n    history.push(\"/movie-details\");\r\n    dispatch(selectedMovie(movie));\r\n  };\r\n  return (\r\n    <div>\r\n      <h4 className=\"text-center\">List of Movies Available</h4>\r\n      <Container>\r\n        <ListGroup>\r\n          {movies\r\n            ? movies.map((movie, index) => {\r\n                const { original_title } = movie;\r\n                return (\r\n                  <div key={index} onClick={() => handleClick(movie)}>\r\n                    <ListGroup.Item variant=\"light\">\r\n                      {index + 1}. {original_title}\r\n                    </ListGroup.Item>\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </ListGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getMovies } from \"../../store/actions/myactions\"\r\nimport List from \"../List\"\r\nconst Home = () => {\r\n    //Accessing Movies array from Redux store\r\n    const moviesArray = useSelector(state => state.movie.movieList)\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n        getMovieList()\r\n    },[])\r\n    // Fetching Movies\r\n    const getMovieList=()=>{\r\n        dispatch(getMovies())\r\n    }\r\n    return (\r\n        <div className=\"m-5 cursor-pointer\">\r\n            <List movies={moviesArray}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","\r\nexport const baseUrl = 'https://api.themoviedb.org/3/movie/popular?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US&page=1'","import { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { openToast } from \"../../../store/actions/myactions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: \"56.25%\", // 16:9\r\n    },\r\n    expand: {\r\n      transform: \"rotate(0deg)\",\r\n      marginLeft: \"auto\",\r\n      transition: theme.transitions.create(\"transform\", {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: \"rotate(180deg)\",\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n  })\r\n);\r\n\r\nexport default function MovieDetailsCard({ movie }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    title,\r\n    backdrop_path,\r\n    release_date,\r\n    overview,\r\n    vote_average,\r\n    vote_count,\r\n  } = movie;\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardHeader title={title} subheader={\"Released on \" + release_date} />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={\"https://image.tmdb.org/t/p/original\" + backdrop_path}\r\n          title=\"Paella dish\"\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {overview}\r\n          </Typography>\r\n          <div className=\"mt-5\">\r\n            Rating : <b>{vote_average}</b>\r\n          </div>\r\n          <div className=\"mt-1\">\r\n            Votes : <b>{vote_count}</b>\r\n          </div>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <IconButton\r\n            aria-label=\"add to favorites\"\r\n            onClick={() => dispatch(openToast(true))}\r\n          >\r\n            <FavoriteIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n\r\n      <CustomizedSnackbars />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport function CustomizedSnackbars() {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const open = useSelector((state) => state.movie.open);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    dispatch(openToast(false));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Movie has been added to Favorite\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { history } from \"../../config/history\";\r\nimport MovieDetailsCard from \"../Comman/Card\";\r\n\r\nconst MovieDetails = () => {\r\n  const movie = useSelector((state) => state.movie.selectedMovie);\r\n  return (\r\n    <div className=\"container m-5\">\r\n      <Button onClick={() => history.push(\"/\")}>Back</Button>\r\n      <div className=\"text-center text-secondary\">Detailed Overview</div>\r\n      <div className=\"d-flex justify-content-center p-3\">\r\n        <MovieDetailsCard movie={movie} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import { Navbar, Container } from \"react-bootstrap\";\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand>The Movies Hub</Navbar.Brand>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Router, Route, Switch,Redirect } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport MovieDetails from \"./Components/MovieDetails\";\nimport { history } from \"./config/history\";\nimport Header from \"./Layout/Header\";\nconst App = () => {\n  return (\n    <Router history={history}>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/movie-db-app.github.io\" />\n        </Route>\n        <Route exact path=\"/movie-db-app.github.io\" component={Home} />\n        <Route exact path=\"/movie-details\" component={MovieDetails} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GET_MOVIE_LIST, OPEN, SELECTED_MOVIE } from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\n    movieList:[],\r\n    selectedMovie:[],\r\n    open:false\r\n}\r\nconst movieReducer = (state=initialState,action) => {\r\n    switch(action.type){\r\n        case GET_MOVIE_LIST:\r\n            return {\r\n                ...state,\r\n                movieList:action.payload\r\n            }\r\n        case SELECTED_MOVIE:\r\n            return{\r\n                ...state,\r\n                selectedMovie: action.payload\r\n            }\r\n        case OPEN:\r\n            return{\r\n                ...state,\r\n                open: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default movieReducer\r\n","import thunk from 'redux-thunk';\r\nimport {createStore,applyMiddleware, combineReducers} from 'redux';\r\nimport movieReducer from './reducers';\r\n\r\nconst reducer = combineReducers({\r\n    movie:movieReducer\r\n})\r\nconst store = createStore(reducer,applyMiddleware(thunk))\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}